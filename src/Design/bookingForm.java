
package Design;
import databaseService.bookingService;
import databaseService.customerService;
import databaseService.taxiService;
import cab_schedule.booking ;
import java.util.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import javax.swing.event.*;
import java.awt.event.*;
import java.lang.String;
import java.io.*;
import Tables.bookingTable;
import cab_schedule.customer;
import cab_schedule.taxi;
import java.text.SimpleDateFormat;

public class bookingForm extends javax.swing.JFrame
{
    private bookingTable t = new bookingTable();
    private bookingService service=new bookingService();
    private customerService service2=new customerService();
    private taxiService service3=new taxiService();
    private long minim=999999999;
    private long minim2=999999999;
    private int num_days=0;
    public bookingForm() throws IOException
    {
	Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
	
        //int x = (dim.width-this.getWidth())/3;
        //int y = (dim.height-this.getHeight())/3;
	int x= dim.width/7;
	int y=dim.height/8;
	setLocation(x, y);
	this.service = service;
        try {
            t.setData(service.getbooking());
        } catch (Exception exception) {
            exception.printStackTrace();
        }
	initComponents();
	jTable1.setModel(t);

        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() 
	{
            @Override
            public void valueChanged(ListSelectionEvent e) 
	    {
                int row = jTable1.getSelectedRow();
                if (row != -1) {
                    booking tx = t.get(row);
                    jTextField2.setText(tx.id);
		    jTextField3.setText(tx.pan_number);
		    jTextField4.setText(tx.taxi_reg);
		    // field 9 and 10
		    double a=tx.x1;
		    double b=tx.y1;
		    double c=tx.x2;
		    double d=tx.y2;
		    try{
			Scanner s=new Scanner(new File("landmarks.txt"));
			 while(s.hasNextInt())
			   {
				   int aa=s.nextInt();
				   int bb=s.nextInt();
				   String str=s.next();
				   if((int)a==aa && (int)b==bb)
				   {
				       jTextField9.setText(str);
				   }
				   if((int)c==aa && (int)d==bb)
				   {
				       jTextField10.setText(str);
				   }
			   }
			}
		    catch(IOException ee){}
		   
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Booking Form:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 190, 30));

        jTextField1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 2));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 150, 30));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SEARCH BY BOOKING ID");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 200, 30));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("SEARCH BY PAN NUMBER");
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 210, 30));

        jTable1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 860, 190));

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Booking ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 80, -1));

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Pan_number");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("taxi Reg Number");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 450, 130, -1));

        jTextField2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 2));
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 150, 30));

        jTextField3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 2));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, 150, 30));

        jTextField4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 2));
        jTextField4.setEnabled(false);
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, 160, 30));

        jLabel5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("From");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, -1, 20));

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("To");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, -1, 20));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("INSERT");
        jButton3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 340, 120, 30));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("DELETE");
        jButton5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 390, 120, 30));

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("BACK");
        jButton6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 440, 110, 30));

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("REFRESH");
        jButton7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jButton7.setContentAreaFilled(false);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 290, 120, 30));

        jTextField9.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jTextField9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 2));
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 290, 160, 30));

        jTextField10.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jTextField10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 2));
        getContentPane().add(jTextField10, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 340, 160, 30));

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Check Availability");
        jButton8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        jButton8.setContentAreaFilled(false);
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 170, 30));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 444, 190, 20));

        jLabel10.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Date of Journey");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 400, 120, -1));

        jDateChooser1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 102), 2));
        jDateChooser1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        getContentPane().add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 390, 160, 30));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Design/Apple-Wood.jpg"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
	try{
	List<booking> l=service.getbooking();
	t.setData(l);
	jTextField2.setText(null);
        jTextField4.setText(null);
	jTextField3.setText(null);
        jTextField9.setText(null);
	jTextField10.setText(null);
	jLabel7.setText("");
	jDateChooser1.setDate(null);
	}
    catch(Exception e){ e.printStackTrace();} 
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
	jLabel7.setText("");
	dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
	jLabel7.setText("");
	String keyword = jTextField1.getText();
        List<booking> list = new ArrayList<booking>();
      try {
            list = service.getSearch_pan_number(keyword);
        } 
      catch (Exception e) 
	{
        }
	t.setData(list);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
	jLabel7.setText("");
	String keyword = jTextField1.getText();
        List<booking> list = new ArrayList<booking>();
      try {
            list = service.getSearch_id(keyword);
        } 
      catch (Exception e) 
	{
        }
	t.setData(list);
    }//GEN-LAST:event_jButton1ActionPerformed
    public String dijkstra(int a, int b, int c, int d)
    {
	int[][] edges=new int[1000][4];
	int num_edges=0;
	try{
		Scanner s=new Scanner(new File("connections.txt"));
		 while(s.hasNextInt())
		   {
			edges[num_edges][0]=s.nextInt();
			edges[num_edges][1]=s.nextInt();
			edges[num_edges][2]=s.nextInt();
			edges[num_edges][3]=s.nextInt();
			num_edges++;
		   }
		}
	catch(IOException ee){}
	
	int[][] taxi_loc=new int[500][2];
	int num_taxi=0;
	try{
	    List<taxi> list=service3.gettaxi();
	    Iterator<taxi> iterator = list.iterator();
	    while (iterator.hasNext()) 
	    {
		taxi tt=iterator.next();
		int loc_x=(int)tt.x;
		int loc_y=(int)tt.y;
		    if(tt.status==0)
		    {
		    taxi_loc[num_taxi][0]=loc_x;
		    taxi_loc[num_taxi][1]=loc_y;
		    num_taxi++;
		    }
	    }
	}
	catch(IOException ee){}
	int[][] landmarks=new int[500][2];
	String tr[]=new String[500];
	int num_landmarks=0;
	try{
	    Scanner s=new Scanner(new File("landmarks.txt"));
		 while(s.hasNext())
		   {
			landmarks[num_landmarks][0]=s.nextInt();
			landmarks[num_landmarks][1]=s.nextInt();
			tr[num_landmarks]=s.next();
			
			num_landmarks++;
		   }
		}
	catch(IOException ee){ ee.printStackTrace();}
	//landmarks[i][2], taxi_loc[i][2], edges[i][4].
	int N=num_landmarks;
	long[][] dist=new long[N][N];
	for(int i=0; i<N; i++)
	{
	    int xx=landmarks[i][0];int yy=landmarks[i][1];
		for(int j=i;j<N;j++)
		{
			int xx1=landmarks[j][0];int yy1=landmarks[j][1];
			int flag=0;
			for(int ii=0; ii<num_edges; ii++)
			{
			    if(edges[ii][0]==xx && edges[ii][1]==yy && edges[ii][2]==xx1 && edges[ii][3]==yy1)
			    {
				flag=1;
			    }
			    if(edges[ii][0]==xx1 && edges[ii][1]==yy1 && edges[ii][2]==xx && edges[ii][3]==yy)
			    {
				flag=1;
			    }
			}
			if(flag==1)
			{
			    dist[i][j]=(((xx-xx1)*(xx-xx1))+((yy-yy1)*(yy-yy1)));
			    dist[j][i]=dist[i][j];
			}
			else
			{
			     dist[i][j]=999999999;
			    dist[j][i]=dist[i][j];
			}
			
		}
	}
	int pos_taxi[]=new int[num_taxi];
	for(int i=0;i<num_taxi; i++)
	{
	    
	    for(int j=0; j<num_landmarks; j++)
	    {
		if(landmarks[j][0]==taxi_loc[i][0] && landmarks[j][1]==taxi_loc[i][1])
		{
		    pos_taxi[i]=j;
		}
	    }
	}
	for(int i=0; i<num_taxi; i++)
	    System.out.print("hello: "+pos_taxi[i]+", ");
	System.out.println();
	
	int target=0;
	int target2=0;
	for(int j=0; j<num_landmarks; j++)
	{
	    if(landmarks[j][0]==a && landmarks[j][1]==b)
	    {
	        target=j;
	    }
	    if(landmarks[j][0]==c && landmarks[j][1]==d)
	    {
	        target2=j;
	    }
        }
	System.out.println("target: "+target);
	int node=0;
	minim=999999999;
	for(int i=0; i<num_taxi; i++)
	{
	    Dijk f=new Dijk();
	    System.out.println("position of taxi: "+ pos_taxi[i]);
	    f.dijkstra( target, pos_taxi[i], dist);
	    long rest=((long)f.distance(target, pos_taxi[i]));
	    System.out.println("distance: "+rest);
	    if(rest<minim)
	    {
		minim=rest;
		node=pos_taxi[i];
	    }
	}
	int node_x=landmarks[node][0];
	int node_y=landmarks[node][1];
	System.out.println(node_x+", "+node_y);
	String naam=tr[node];
	String str="";
	minim=(long)Math.sqrt(minim);
	int readings=0;
	// reg_number
	try{
	    List<taxi> list=service3.gettaxi();
	    Iterator<taxi> iterator = list.iterator();
	    while (iterator.hasNext()) 
	    {
		taxi tt=iterator.next();
		int loc_x=(int)tt.x;
		int loc_y=(int)tt.y;
		if(loc_x==node_x && loc_y==node_y && tt.status==0)
		{
		    str=tt.reg_no;
		    readings=tt.reading;
		}
	    }
	}
	catch(IOException ee){ ee.printStackTrace();}
	
	Dijk ff=new Dijk();
	ff.dijkstra( target, target2, dist);
	minim2=((long)ff.distance(target, target2));
	minim2=(long)Math.sqrt(minim2);
	num_days=(int)minim2/readings;
	
	return str;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
	jLabel7.setText("");
	try {
            booking tt = new booking();
	    tt.id=jTextField2.getText();
	    tt.pan_number=jTextField3.getText();
	    
	    //tt.taxi_reg=jTextField4.getText();
	    String from=jTextField9.getText();
	    String to= jTextField10.getText();
	    Date d=jDateChooser1.getDate();
	    //System.out.println(from+" "+to);
	    // ye kewal x1 and y1 cordinate ke liye hi hai..
	    try{	
			Scanner s=new Scanner(new File("landmarks.txt"));
			 while(s.hasNext())
			   {
				   int aa=s.nextInt();
				   int bb=s.nextInt();
				   String str=s.next();
				   System.out.println(str);
				   
				   if(str.equals(from))
				   {
				       tt.x1=(double)aa;
				       tt.y1=(double)bb;
				   }
				   if(str.equals(to))
				   {
				       tt.x2=(double)aa;
				       tt.y2=(double)bb;
				   }
			   }
		}
	    catch(IOException ee){ ee.printStackTrace();}
	    //pehle refresh kar dena..
	    MyFrame c=new MyFrame();
	    tt.taxi_reg=dijkstra((int)tt.x1, (int)tt.y1, (int)tt.x2, (int)tt.y2);
	    //ab start aur end update karna hai..
	    tt.start=jDateChooser1.getDate();
	    
	   
	    Calendar cal = Calendar.getInstance();
	    cal.setTime(tt.start);
	    cal.add(Calendar.DATE, num_days); //minus number would decrement the days
	    tt.end= cal.getTime();
	    
	    service.insertbooking(tt);
            t.insert(tt);
	    
	    // tt.taxi_reg ka status update karna hai.
	    taxi taxi1=service3.getTaxi(tt.taxi_reg);
	    taxi1.status=1;
	    service3.updatetaxi(taxi1);

            try {
                List<booking> list = service.getbooking();
                t.setData(list);
            } catch (Exception exception) {
                exception.printStackTrace();
            }
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
	jLabel7.setText("");
	try{
	    booking tt=new booking();
	    tt.id=jTextField2.getText();
	    tt.pan_number=jTextField3.getText();
	    tt.taxi_reg=jTextField4.getText();
	    String from=jTextField9.getText();
	    String to=jTextField10.getText();
	    try{
			Scanner s=new Scanner(new File("landmarks.txt"));
			 while(s.hasNextInt())
			   {
				   int aa=s.nextInt();
				   int bb=s.nextInt();
				   String str=s.next();
				   if(str.equals(from))
				   {
				       tt.x1=(double)aa;
				       tt.y1=(double)bb;
				   }
				   if(str.equals(to))
				   {
				       tt.x2=(double)aa;
				       tt.y2=(double)bb;
				   }
			   }
		}
	    catch(IOException ee){}
	    
	    // tt.taxi_reg ka status update karna hai.
	    taxi taxi1=service3.getTaxi(tt.taxi_reg);
	    taxi1.status=0;
	    service3.updatetaxi(taxi1);
	    
	    service.deletebooking(tt);
	    List<booking> list = service.getbooking();
            t.setData(list);
	}
	catch(Exception e){
	     e.printStackTrace();
	}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
	try{
	List<customer> list2 = service2.getcustomer();
	String str=jTextField3.getText();
	Iterator<customer> iterator = list2.iterator();
	int ok=0;
	while (iterator.hasNext()) {
	    String str2=iterator.next().pan_number;
	    if(str.equals(str2))
		ok=1;
	}
	if(ok==1)
	    jLabel7.setText("Customer Available");
	else
	    jLabel7.setText("Not Available");
	}
	catch(Exception ee){ ee.printStackTrace();}
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
	 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex) {
	    java.util.logging.Logger.getLogger(bookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex) {
	    java.util.logging.Logger.getLogger(bookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex) {
	    java.util.logging.Logger.getLogger(bookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(bookingForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable() {
	    public void run() {
		try{
		new bookingForm().setVisible(true);
		}
		catch(Exception e){}
	    }
	});
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
